version: "3"

x-workspace:
  build:
    args: &workspace-args
      INSTALL_BASH_COMPLETION: ${WORKSPACE_INSTALL_BASH_COMPLETION:-false}
      INSTALL_NODEJS_LTS: ${WORKSPACE_INSTALL_NODEJS_LTS:-false}
      INSTALL_VIM: ${WORKSPACE_INSTALL_VIM:-false}
  volumes:
    - &bashrc {
      source: ./workspace/bashrc,
      target: /root/.bashrc,
      type: bind
    }
    - &sourced {
      source: ./workspace/source.d,
      target: /root/.source.d,
      type: bind
    }
    - &gnupg {
        source: "${WORKSPACE_GPG_DIR:-./workspace/gpg}",
        target: /root/.gnupg,
        type: bind
      }
    - &ssh {
        source: "${WORKSPACE_SSH_DIR:-./workspace/ssh}",
        target: /root/.ssh,
        type: bind
      }

services:
  ### App Service ##############################################################
  app-server:
    image: nginx:alpine
    depends_on:
      - app
    volumes:
      - ./containers/php-fpm/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./:/srv
    networks:
      - default
      - public

  app:
    image: ${COMPOSE_PROJECT_NAME}-app:${COMPOSE_PROJECT_VERSION:-1.0}
    depends_on:
      - database
    build:
      context: ./containers/php-fpm
      args:
        <<: [ *workspace-args ]
        TIMEZONE: ${PHP_TIMEZONE:-Asia/Jakarta}
        PHP_VERSION: ${PHP_VERSION:-8.1}
        ### Custom Install #####################################################
        INSTALL_BCMATH: ${PHP_INSTALL_BCMATH:-false}
        INSTALL_BZIP: ${PHP_INSTALL_BZIP:-false}
        INSTALL_CALENDAR: ${PHP_INSTALL_CALENDAR:-false}
        INSTALL_COMPOSER: ${PHP_INSTALL_COMPOSER:-false}
        INSTALL_GD: ${PHP_INSTALL_GD:-false}
        INSTALL_GHOSTSCRIPT: ${PHP_INSTALL_GHOSTSCRIPT:-false}
        INSTALL_GMP: ${PHP_INSTALL_GMP:-false}
        INSTALL_ICONV: ${PHP_INSTALL_ICONV:-false}
        INSTALL_IMAGE_OPTIMIZERS: ${PHP_INSTALL_IMAGE_OPTIMIZERS:-false}
        INSTALL_IMAGEMAGICK: ${PHP_INSTALL_IMAGEMAGICK:-false}
        INSTALL_IMAP: ${PHP_INSTALL_IMAP:-false}
        INSTALL_INTL: ${PHP_INSTALL_INTL:-false}
        INSTALL_LDAP: ${PHP_INSTALL_LDAP:-false}
        INSTALL_MEMCACHED: ${PHP_INSTALL_MEMCACHED:-false}
        INSTALL_MONGO: ${PHP_INSTALL_MONGO:-false}
        INSTALL_MSSQL: ${PHP_INSTALL_MSSQL:-false}
        INSTALL_MYSQLI: ${PHP_INSTALL_MYSQLI:-false}
        INSTALL_OCI8: ${PHP_INSTALL_OCI8:-false}
        INSTALL_OPCACHE: ${PHP_INSTALL_OPCACHE:-false}
        INSTALL_PCNTL: ${PHP_INSTALL_PCNTL:-false}
        INSTALL_PGSQL: ${PHP_INSTALL_PGSQL:-false}
        INSTALL_PHPDBG: ${PHP_INSTALL_PHPDBG:-false}
        INSTALL_PHPREDIS: ${PHP_INSTALL_PHPREDIS:-false}
        INSTALL_SUPERVISOR: ${PHP_INSTALL_SUPERVISOR:-false}
        INSTALL_SYMFONY_CLI: ${PHP_INSTALL_SYMFONY_CLI:-false}
        INSTALL_TOKENIZER: ${PHP_INSTALL_TOKENIZER:-false}
        INSTALL_XDEBUG: ${PHP_INSTALL_XDEBUG:-false}
        INSTALL_ZIP_ARCHIVE: ${PHP_INSTALL_ZIP_ARCHIVE:-false}
    working_dir: /srv/app
    environment:
      - APP_NAME=SIMC
      - APP_URL=${APP_URL:-https://simc.localhost}
      - DB_CONNECTION=pgsql
      - DB_HOST=database
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE:-app}
      - DB_USERNAME=${DB_USERNAME:-app}
      - DB_PASSWORD=${DB_PASSWORD:-!ChangeMe!}
    volumes:
      - { <<: [ *bashrc  ] }
      - { <<: [ *gnupg   ] }
      - { <<: [ *sourced ] }
      - { <<: [ *ssh     ] }
      - ./:/srv
      - ./containers/php-fpm/conf.d:/usr/local/etc/php/local.d
      - ./storage/cache/composer:/root/.composer/cache
      - ./storage/code-server/php-fpm/:/root/.vscode-server

  ### Database Service #########################################################
  database-admin:
    image: adminer:4.8.1
    environment:
      - ADMINER_DEFAULT_SERVER=database
    networks:
      - default
      - public
    depends_on:
      - database

  database:
    image: postgres:${DB_VERSION:-14}-alpine
    environment:
      - POSTGRES_DB=${DB_DATABASE:-app}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-!ChangeMe!}
      - POSTGRES_USER=${DB_USERNAME:-app}
    volumes:
      - ${DB_DATA_PATH:-./storage/database}:/var/lib/postgresql/data:rw

networks:
  public:
    name: ${EXTERNAL_NETWORK:-caddy}
    external: true
  default:
    driver: bridge
